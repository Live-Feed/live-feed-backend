version: '3'
services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      TZ: Asia/Seoul

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      TZ: Asia/Seoul
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    depends_on:
      - zookeeper
    restart: always
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      TZ: Asia/Seoul
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      TZ: Asia/Seoul
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  fluent-bit:
    image: bitnami/fluent-bit
    container_name: fluent-bit
    environment:
      TZ: Asia/Seoul
    volumes:
      - ./config/fluent-bit.conf:/opt/bitnami/fluent-bit/conf/fluent-bit.conf
#      - ./config/parsers.conf:/opt/bitnami/fluent-bit/conf/parsers.conf
      - ./logs/service-module:/var/log/spring_service_log
#      - ./logs/batch-module:/var/log/spring_batch_log:ro
    depends_on:
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      TZ: Asia/Seoul
      xpack.security.enabled: false
      node.name: single-node
      cluster.name: el-singlenode-c
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.4
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      TZ: Asia/Seoul
      ELASTICSEARCH_HOST: '["https://elasticsearch:9200"]'

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: live_feed
      TZ: Asia/Seoul
    command: 
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    restart: always